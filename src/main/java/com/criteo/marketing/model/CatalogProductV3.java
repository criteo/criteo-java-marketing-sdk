/*
 * Marketing API v.1.0
 * IMPORTANT: This swagger links to Criteo production environment. Any test applied here will thus impact real campaigns.
 *
 * The version of the OpenAPI document: v.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.criteo.marketing.model.GoogleProductV3;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CatalogProductV3
 */

public class CatalogProductV3 {
  public static final String SERIALIZED_NAME_BATCH_ID = "batchId";
  @SerializedName(SERIALIZED_NAME_BATCH_ID)
  private Long batchId;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchantId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  /**
   * The method of the batch entry.
   */
  @JsonAdapter(MethodEnum.Adapter.class)
  public enum MethodEnum {
    INSERT("Insert"),
    
    DELETE("Delete");

    private String value;

    MethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MethodEnum fromValue(String value) {
      for (MethodEnum b : MethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MethodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MethodEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private MethodEnum method;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "productId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private String productId;

  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  private GoogleProductV3 product;

  public static final String SERIALIZED_NAME_FEED_ID = "feedId";
  @SerializedName(SERIALIZED_NAME_FEED_ID)
  private String feedId;


  public CatalogProductV3 batchId(Long batchId) {
    
    this.batchId = batchId;
    return this;
  }

   /**
   * An entry ID, unique within the batch request.
   * @return batchId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An entry ID, unique within the batch request.")

  public Long getBatchId() {
    return batchId;
  }



  public void setBatchId(Long batchId) {
    this.batchId = batchId;
  }


  public CatalogProductV3 merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * The ID of the managing account.
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the managing account.")

  public String getMerchantId() {
    return merchantId;
  }



  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public CatalogProductV3 method(MethodEnum method) {
    
    this.method = method;
    return this;
  }

   /**
   * The method of the batch entry.
   * @return method
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The method of the batch entry.")

  public MethodEnum getMethod() {
    return method;
  }



  public void setMethod(MethodEnum method) {
    this.method = method;
  }


  public CatalogProductV3 productId(String productId) {
    
    this.productId = productId;
    return this;
  }

   /**
   * The ID of the product to get or delete. Only defined if the method is get or delete.
   * @return productId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the product to get or delete. Only defined if the method is get or delete.")

  public String getProductId() {
    return productId;
  }



  public void setProductId(String productId) {
    this.productId = productId;
  }


  public CatalogProductV3 product(GoogleProductV3 product) {
    
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GoogleProductV3 getProduct() {
    return product;
  }



  public void setProduct(GoogleProductV3 product) {
    this.product = product;
  }


  public CatalogProductV3 feedId(String feedId) {
    
    this.feedId = feedId;
    return this;
  }

   /**
   * The Content API feed id.
   * @return feedId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Content API feed id.")

  public String getFeedId() {
    return feedId;
  }



  public void setFeedId(String feedId) {
    this.feedId = feedId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogProductV3 catalogProductV3 = (CatalogProductV3) o;
    return Objects.equals(this.batchId, catalogProductV3.batchId) &&
        Objects.equals(this.merchantId, catalogProductV3.merchantId) &&
        Objects.equals(this.method, catalogProductV3.method) &&
        Objects.equals(this.productId, catalogProductV3.productId) &&
        Objects.equals(this.product, catalogProductV3.product) &&
        Objects.equals(this.feedId, catalogProductV3.feedId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(batchId, merchantId, method, productId, product, feedId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogProductV3 {\n");
    sb.append("    batchId: ").append(toIndentedString(batchId)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    feedId: ").append(toIndentedString(feedId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

