/*
 * Marketing API v.1.0
 * IMPORTANT: This swagger links to Criteo production environment. Any test applied here will thus impact real campaigns.
 *
 * The version of the OpenAPI document: v.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.criteo.marketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * LoyaltyPointsV3
 */

public class LoyaltyPointsV3 {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_POINTS_VALUE = "pointsValue";
  @SerializedName(SERIALIZED_NAME_POINTS_VALUE)
  private Object pointsValue;

  public static final String SERIALIZED_NAME_RATIO = "ratio";
  @SerializedName(SERIALIZED_NAME_RATIO)
  private Double ratio;


  public LoyaltyPointsV3 name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters.")

  public String getName() {
    return name;
  }



  public void setName(String name) {
    this.name = name;
  }


  public LoyaltyPointsV3 pointsValue(Object pointsValue) {
    
    this.pointsValue = pointsValue;
    return this;
  }

   /**
   * The retailer&#39;s loyalty points in absolute value.
   * @return pointsValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The retailer's loyalty points in absolute value.")

  public Object getPointsValue() {
    return pointsValue;
  }



  public void setPointsValue(Object pointsValue) {
    this.pointsValue = pointsValue;
  }


  public LoyaltyPointsV3 ratio(Double ratio) {
    
    this.ratio = ratio;
    return this;
  }

   /**
   * The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.
   * @return ratio
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.")

  public Double getRatio() {
    return ratio;
  }



  public void setRatio(Double ratio) {
    this.ratio = ratio;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyPointsV3 loyaltyPointsV3 = (LoyaltyPointsV3) o;
    return Objects.equals(this.name, loyaltyPointsV3.name) &&
        Objects.equals(this.pointsValue, loyaltyPointsV3.pointsValue) &&
        Objects.equals(this.ratio, loyaltyPointsV3.ratio);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, pointsValue, ratio);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyPointsV3 {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pointsValue: ").append(toIndentedString(pointsValue)).append("\n");
    sb.append("    ratio: ").append(toIndentedString(ratio)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

